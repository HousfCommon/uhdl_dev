//==========================================================================================================================
//Key is used to ensure the consistency of file version and content, and cannot be modified.
//Version Control is the version number written when the file is generated and cannot be modified.
//ToolMessage is used to record related information of any tool that has processed the file and cannot be manually modified.
//UserMessage is used by the user to write any information, which can be modified in any way.
//Content is the actual payload of the file.
//Parameter is the additional parameter information carried by the file and cannot be modified in any way.

//Key is generated by the hash of Version Control, Content and Parameter to ensure the consistency of the file.
//These three parts do not allow any individual modification
//==========================================================================================================================


//[UHDL]Key Start [md5:ef0e0d0a4725a25e5273c69c4be84eb7]
//Version Control Hash: 3accddf64b1dd03abeb9b0b3e5a7ba44
//Content Hash: 64cdabf3d179af78f838adc116a3a30b
//Parameter Hash: d41d8cd98f00b204e9800998ecf8427e
//[UHDL]Key End [md5:ef0e0d0a4725a25e5273c69c4be84eb7]

//[UHDL]Version Control Start [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]
//[UHDL]Version Control Version:1.0.1
//[UHDL]Version Control End [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]

//[UHDL]Tool Message Start [md5:bcb730ff9e92f1d45968e313d7e36fab]
//Written by UHDL in 2023-07-13 18:11:53
//[UHDL]Tool Message End [md5:bcb730ff9e92f1d45968e313d7e36fab]

//[UHDL]User Message Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]User Message End [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Content Start [md5:64cdabf3d179af78f838adc116a3a30b]
module top (
	input   din1 ,
	output  dout1,
	input   din2 ,
	output  dout2);

	//Wire define for this module.

	//Wire define for sub module.
	wire  sub1_din0             ;
	wire  sub1_dout1            ;
	wire  sub2_TO_sub1_SIG_dout2;
	wire  sub1_dout2            ;
	wire  sub2_din0             ;
	wire  sub1_TO_sub2_SIG_dout1;
	wire  sub1_TO_sub2_SIG_dout2;

	//Wire define for Inout.

	//Wire sub module connect to this module and inter module connect.

	//Wire this module connect to sub module.
	assign sub1_din0 = 1'b0;
	
	assign sub2_din0 = (sub1_dout1 && sub1_dout2);
	
	assign sub2_din1 = sub1_dout1;
	
	assign sub2_din2 = sub1_dout2;
	

	//module inst.
	sub_mod sub1 (
		.din0(sub1_din0),
		.din1(din1),
		.dout1(sub1_dout1),
		.din2(sub2_TO_sub1_SIG_dout2),
		.dout2(sub1_dout2));
	sub_mod sub2 (
		.din0(sub2_din0),
		.din1(sub2_din1),
		.dout1(dout1),
		.din2(sub2_din2),
		.dout2(sub2_TO_sub1_SIG_dout2));

endmodule
//[UHDL]Content End [md5:64cdabf3d179af78f838adc116a3a30b]

//[UHDL]Parameter Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Parameter End [md5:d41d8cd98f00b204e9800998ecf8427e]

